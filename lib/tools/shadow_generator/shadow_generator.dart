import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:fluttery/constants/colors.dart';
import 'package:fluttery/constants/text_styles.dart';
import 'package:fluttery/widgets/common_drawer.dart';
import 'package:fluttery/widgets/copy_code_button.dart';
import 'package:fluttery/widgets/custom_snackbar.dart';

class ShadowGenerator extends StatefulWidget {
  const ShadowGenerator({super.key});

  @override
  State<ShadowGenerator> createState() => _ShadowGeneratorState();
}

class _ShadowGeneratorState extends State<ShadowGenerator> {
  Color boxColor = Colors.white;
  Color shadowColor = kShadowColor;
  double offsetX = 0.0;
  double offsetY = 12.0;
  double blurRadius = 16.0;
  double borderRadius = 10.0;

  String getFinalCode() {
    return """
      // Code Generated By Fluttery: Om Jogani
      //BackgroundColor: Color(0xFFE7EEFB)

      Container(
        height: MediaQuery.of(context).size.height * 0.25,
        width: MediaQuery.of(context).size.width * 0.30,
        alignment: Alignment.center,
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.circular($borderRadius),
          boxShadow: <BoxShadow>[
            BoxShadow(
              color: Color.fromRGBO(72, 76, 82, 0.16),
              offset: Offset($offsetX, $offsetY),
              blurRadius: $blurRadius,
            ),
          ],
        ),
        child: Text(
          "✨Designed by Fluttery✨",
          style: TextStyle(
            fontSize: 20,
            fontWeight: FontWeight.w700,
          ),
        ),
      ),
      """;
  }

  @override
  Widget build(BuildContext context) {
    final Size size = MediaQuery.of(context).size;
    return Scaffold(
      backgroundColor: kBackgroundColor,
      appBar: AppBar(
        backgroundColor: kPrimaryColor,
        title: const Text("Fluttery"),
        elevation: 50.0,
        shadowColor: kShadowColor,
      ),
      body: Row(
        children: <Widget>[
          Expanded(
            flex: 1,
            child: Padding(
              padding:
                  const EdgeInsets.symmetric(horizontal: 20.0, vertical: 8.0),
              child: ListView(
                children: <Widget>[
                  const Center(
                    child: Text(
                      "Shadow Generator",
                      style: kTitleTextStyle,
                    ),
                  ),
                  const SizedBox(height: 15.0),
                  Padding(
                    padding: const EdgeInsets.symmetric(horizontal: 10.0),
                    child: SingleChildScrollView(
                      child: ClipRRect(
                        borderRadius: BorderRadius.circular(10.0),
                        child: Container(
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(10.0),
                          ),
                          child: ExpansionPanelList.radio(
                            dividerColor: Colors.white,
                            elevation: 1.0,
                            expandedHeaderPadding:
                                const EdgeInsets.symmetric(horizontal: 5.0),
                            animationDuration:
                                const Duration(milliseconds: 500),
                            children: <ExpansionPanelRadio>[
                              customExpansionPanelRadio(
                                title: "Shadow Customization",
                                children: <Widget>[
                                  Container(
                                    decoration: BoxDecoration(
                                      color: Colors.white,
                                      borderRadius: BorderRadius.circular(10.0),
                                    ),
                                    child: Column(
                                      crossAxisAlignment:
                                          CrossAxisAlignment.start,
                                      children: <Widget>[
                                        const Padding(
                                          padding: EdgeInsets.only(
                                            left: 15.0,
                                            top: 5.0,
                                          ),
                                          child: Text(
                                            "Offset X-Axis",
                                            textAlign: TextAlign.start,
                                            style: kSubTitleTextStyle,
                                          ),
                                        ),
                                        Slider(
                                          value: offsetX,
                                          max: 50,
                                          activeColor: kPrimaryColor,
                                          inactiveColor:
                                              kPrimaryColor.withOpacity(0.5),
                                          label: offsetX.round().toString(),
                                          onChanged: (double newOffsetX) {
                                            setState(() {
                                              offsetX = newOffsetX;
                                            });
                                          },
                                        ),
                                      ],
                                    ),
                                  ),
                                  const SizedBox(height: 10.0),
                                  Container(
                                    decoration: BoxDecoration(
                                      color: Colors.white,
                                      borderRadius: BorderRadius.circular(10.0),
                                    ),
                                    child: Column(
                                      crossAxisAlignment:
                                          CrossAxisAlignment.start,
                                      children: <Widget>[
                                        const Padding(
                                          padding: EdgeInsets.only(
                                            left: 15.0,
                                            top: 5.0,
                                          ),
                                          child: Text(
                                            "Offset Y-Axis",
                                            textAlign: TextAlign.start,
                                            style: kSubTitleTextStyle,
                                          ),
                                        ),
                                        Slider(
                                          value: offsetY,
                                          max: 50,
                                          activeColor: kPrimaryColor,
                                          inactiveColor:
                                              kPrimaryColor.withOpacity(0.5),
                                          label: offsetY.round().toString(),
                                          onChanged: (double newOffsetY) {
                                            setState(() {
                                              offsetY = newOffsetY;
                                            });
                                          },
                                        ),
                                      ],
                                    ),
                                  ),
                                ],
                              ),
                              customExpansionPanelRadio(
                                title: "Border Radius",
                                children: <Widget>[
                                  Container(
                                    decoration: BoxDecoration(
                                      color: Colors.white,
                                      borderRadius: BorderRadius.circular(10.0),
                                    ),
                                    child: Column(
                                      crossAxisAlignment:
                                          CrossAxisAlignment.start,
                                      children: <Widget>[
                                        const Padding(
                                          padding: EdgeInsets.only(
                                            left: 15.0,
                                            top: 5.0,
                                          ),
                                          child: Text(
                                            "Border Radius",
                                            textAlign: TextAlign.start,
                                            style: kSubTitleTextStyle,
                                          ),
                                        ),
                                        Slider(
                                          value: borderRadius,
                                          max: 100,
                                          activeColor: kPrimaryColor,
                                          inactiveColor:
                                              kPrimaryColor.withOpacity(0.5),
                                          label:
                                              borderRadius.round().toString(),
                                          onChanged: (double newBorderRadius) {
                                            setState(() {
                                              borderRadius = newBorderRadius;
                                            });
                                          },
                                        ),
                                      ],
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ),
          Expanded(
            flex: 1,
            child: Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: [
                  Container(
                    height: size.height * 0.25,
                    width: size.width * 0.30,
                    alignment: Alignment.center,
                    decoration: BoxDecoration(
                      color: boxColor,
                      borderRadius: BorderRadius.circular(borderRadius),
                      boxShadow: <BoxShadow>[
                        BoxShadow(
                          color: shadowColor,
                          offset: Offset(offsetX, offsetY),
                          blurRadius: blurRadius,
                        ),
                      ],
                    ),
                    child: Text(
                      "✨Designed by Fluttery✨",
                      style: kSubTitleTextStyle.copyWith(
                          fontWeight: FontWeight.w700),
                    ),
                  ),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: [
                      CopyCodeButton(
                        icon: Icons.code_rounded,
                        buttonText: "COPY",
                        onPressed: () {
                          Clipboard.setData(ClipboardData(text: getFinalCode()))
                              .then((value) {
                            FlutterySnackBar(
                              context: context,
                              message: "Code Copied Successfully!",
                              icon: Icons.done_rounded,
                            ).customSnackBar();
                          });
                        },
                      ),
                      CopyCodeButton(
                        icon: Icons.refresh_rounded,
                        buttonText: "RESET",
                        onPressed: () {
                          setState(() {
                            boxColor = Colors.white;
                            shadowColor = kShadowColor;
                            offsetX = 0.0;
                            offsetY = 12.0;
                            blurRadius = 16.0;
                            borderRadius = 10.0;
                          });
                        },
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
      drawer: const CustomCommonDrawer(),
    );
  }

  ExpansionPanelRadio customExpansionPanelRadio({
    required String title,
    required List<Widget> children,
  }) {
    return ExpansionPanelRadio(
      backgroundColor: Colors.white54,
      canTapOnHeader: true,
      value: title,
      headerBuilder: (context, isExpanded) {
        return Container(
          alignment: Alignment.centerLeft,
          padding: const EdgeInsets.symmetric(
            horizontal: 10.0,
          ),
          child: Text(
            title,
            maxLines: 1,
            style: const TextStyle(
              fontSize: 20.0,
              fontWeight: FontWeight.w600,
            ),
          ),
        );
      },
      body: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Column(
          children: children,
        ),
      ),
    );
  }
}
